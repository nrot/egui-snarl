use std::fmt::Debug;

use egui::{PointerButton, Response};

///An input event generated by the integration.
pub trait GraphEvents{
    //Remove hovered wire by second click
    fn remove_hovered_wire(&mut self, background_response: Response)->bool{
        background_response.clicked_by(PointerButton::Secondary)
    }

    fn eq<'a>(&self, that: &'a dyn GraphEvents)->bool;
}

#[cfg(all(feature = "serde", not(feature = "egui-probe")))]
pub trait GraphEventsDebug : GraphEvents + Debug {}

#[cfg(all(not(feature = "serde"), feature = "egui-probe"))]
pub trait GraphEventsDebug : GraphEvents + Debug{}


#[cfg(all(feature = "serde", feature = "egui-probe"))]
pub trait GraphEventsDebug: GraphEvents + Debug {}

#[cfg(all(not(feature = "serde"), not(feature = "egui-probe")))]
pub trait GraphEventsDebug : GraphEvents + Debug {}


impl PartialEq for dyn GraphEventsDebug{
    fn eq(&self, other: &dyn GraphEventsDebug) -> bool {
        self.eq(other)
    }
}